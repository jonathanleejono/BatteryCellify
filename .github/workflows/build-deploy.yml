# name: Build and Deploy Code

# on: 
#   push:
#     branches:
#       - "main"

# jobs:
#   build:
#     environment:
#       name: testing
#     env:
#       DATABASE_URL: ${{secrets.DATABASE_URL}}
#       SECRET_KEY: ${{secrets.SECRET_KEY}}
#       ALGORITHM: ${{secrets.ALGORITHM}}
#       ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
#       ENVIRONMENT: ${{secrets.ENVIRONMENT}}

#     services:
#       postgres:
#         image: postgres
#         env:
#           POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
#           POSTGRES_DB: ${{secrets.DATABASE_NAME}}
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     runs-on: ubuntu-latest
#     steps:
#       - name: Pulling git repo
#         uses: actions/checkout@v2

#       - name: Install python version 3.9
#         uses: actions/setup-python@v2
#         with:
#           python-version: "3.9"

#       - name: Update pip
#         run: python -m pip install --upgrade pip

#       - name: Install backend dependencies
#         run: |
#           cd backend
#           pip install -r requirements.txt

#       - name: Test backend
#         run: |
#           cd backend
#           pip install pytest
#           pytest
      
#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#       - name: Set up Docker Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v1

#       - name: see ls
#         run: ls

#       - name: Build and push
#         id: docker_build
#         uses: docker/build-push-action@v2
#         with:
#           context: ./backend
#           file: ./backend/Dockerfile
#           builder: ${{ steps.buildx.outputs.name }}
#           push: true
#           tags: ${{ secrets.DOCKER_HUB_USERNAME }}/battery-cellify:latest
#           cache-from: type=local,src=/tmp/.buildx-cache
#           cache-to: type=local,dest=/tmp/.buildx-cache
#       - name: Image digest
#         run: echo ${{ steps.docker_build.outputs.digest }}

#   deploy:
#     runs-on: ubuntu-latest
#   # jobs run in parallel, but using need creates a sequential dependent order
#     needs: [build]

#     steps:
#       - name: pulling git repo
#         uses: actions/checkout@v2
#       - name: deploying to Heroku
#         uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
#         with:
#           heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#           heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
#           heroku_email: ${{secrets.HEROKU_EMAIL}}
#           appdir: "backend"
    

